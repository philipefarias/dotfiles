#!/usr/bin/env bash

BASE_PATH=$HOME/Code/integragrp
ALMOXARIFADO_PATH=$BASE_PATH/almoxarifado
PROTOCOLO_PATH=$BASE_PATH/protocolo
PATRIMONIO_PATH=$BASE_PATH/patrimonio
FROTAS_PATH=$BASE_PATH/frotas

SESSION_BASE=integragrp_base
SESSION_ALMOXARIFADO=integragrp_almoxarifado
SESSION_PROTOCOLO=integragrp_protocolo
SESSION_PATRIMONIO=integragrp_patrimonio
SESSION_FROTAS=integragrp_frotas
PROGRAM_NAME=${0##*/} # http://tldp.org/LDP/abs/html/string-manipulation.html


function initialize() {
  tmux kill-session -t $SESSION_BASE > /dev/null 2>&1
  tmux kill-session -t $SESSION_ALMOXARIFADO > /dev/null 2>&1
  tmux kill-session -t $SESSION_PROTOCOLO > /dev/null 2>&1
  tmux kill-session -t $SESSION_PATRIMONIO > /dev/null 2>&1
  tmux kill-session -t $SESSION_FROTAS > /dev/null 2>&1
}

function create_sessions() {
  cd $BASE_PATH
  tmux new-session -s $SESSION_BASE -d

  cd $ALMOXARIFADO_PATH
  tmux new-session -s $SESSION_ALMOXARIFADO -d

  cd $PROTOCOLO_PATH
  tmux new-session -s $SESSION_PROTOCOLO -d

  cd $PATRIMONIO_PATH
  tmux new-session -s $SESSION_PATRIMONIO -d

  cd $FROTAS_PATH
  tmux new-session -s $SESSION_FROTAS -d
}

function create_windows() {
  create_base_window

  # Cria window almoxarifado
  create_default_windows $ALMOXARIFADO_PATH $SESSION_ALMOXARIFADO
  tmux new-window -a -c $ALMOXARIFADO_PATH -n sidekiq -t $SESSION_ALMOXARIFADO

  # Cria window protocolo
  create_default_windows $PROTOCOLO_PATH $SESSION_PROTOCOLO

  # Cria window patrimonio
  create_default_windows $PATRIMONIO_PATH $SESSION_PATRIMONIO
  tmux new-window -a -c $PATRIMONIO_PATH -n sidekiq -t $SESSION_PATRIMONIO

  # Cria window frotas
  create_default_windows $FROTAS_PATH $SESSION_FROTAS

  # Disable window renaming
  tmux set-option -g automatic-rename off > /dev/null 2>&1
  tmux set-option -g allow-rename off > /dev/null 2>&1
}

function create_base_window() {
  tmux rename-window -t $SESSION_BASE:1 postgres
  tmux new-window -a -c $BASE_PATH -n redis -t $SESSION_BASE
}

function create_default_windows() {
  SESSION_PATH=$1
  SESSION_NAME=$2

  tmux rename-window -t $SESSION_NAME:1 editor
  tmux new-window -a -c $SESSION_PATH -n bash -t $SESSION_NAME
  tmux new-window -a -c $SESSION_PATH -n console -t $SESSION_NAME
  tmux new-window -a -c $SESSION_PATH -n server -t $SESSION_NAME
}

function integra_start() {
  ### Base Session
  # Start Postgres
  echo "Starting postgres..."
  tmux send-keys -t $SESSION_BASE:postgres 'postgres -D /usr/local/var/postgres' Enter

  # Start Redis
  echo "Starting redis..."
  tmux send-keys -t $SESSION_BASE:redis 'redis-server' Enter

  # Set focus on first window
  tmux select-window -t $SESSION_BASE:1

  echo "Started at $SESSION_BASE"

  ### Almoxarifado Session
  # Start unicorn from almoxarifado on below pane
  echo "Starting almoxarifado..."
  tmux send-keys -t $SESSION_ALMOXARIFADO:server 'RAILS_RELATIVE_URL_ROOT=/almoxarifado unicorn -p 3001' Enter

  # Start sidekiq from almoxarifado on above pane
  echo "Starting almoxarifado's sidekiq..."
  tmux send-keys -t $SESSION_ALMOXARIFADO:sidekiq 'sidekiq' Enter

  # Set focus on first window
  tmux select-window -t $SESSION_ALMOXARIFADO:1

  echo "Started at $SESSION_ALMOXARIFADO"

  ### Frotas Session
  # Start unicorn from frotas
  echo "Starting frotas..."
  tmux send-keys -t $SESSION_FROTAS:server 'RAILS_RELATIVE_URL_ROOT=/frotas unicorn -p 3002' Enter

  # Set focus on first window
  tmux select-window -t $SESSION_FROTAS:1

  echo "Started at $SESSION_FROTAS"

  ### Protocolo Session
  # Start unicorn from protocolo
  echo "Starting protocolo..."
  tmux send-keys -t $SESSION_PROTOCOLO:server "RAILS_RELATIVE_URL_ROOT=/protocolo unicorn -p 3004" Enter

  # Set focus on first window
  tmux select-window -t $SESSION_PROTOCOLO:1

  echo "Started at $SESSION_PROTOCOLO"

  ### Patrimonio Session
  # Start unicorn from patrimonio
  echo "Starting patrimonio..."
  tmux send-keys -t $SESSION_PATRIMONIO:server 'RAILS_RELATIVE_URL_ROOT=/patrimonio unicorn -p 3005' Enter

  # Start sidekiq from patrimonio on above pane
  echo "Starting patrimonio's sidekiq..."
  tmux send-keys -t $SESSION_PATRIMONIO:sidekiq 'sidekiq' Enter

  # Set focus on first window
  tmux select-window -t $SESSION_PATRIMONIO:1

  echo "Started at $SESSION_PATRIMONIO"
}

function integra_stop() {
  ### Session Almoxarifado
  echo "Stopping almoxarifado's sidekiq...."
  tmux send-keys -t $SESSION_ALMOXARIFADO:sidekiq 'C-c'

  echo "Stopping almoxarifado...."
  tmux send-keys -t $SESSION_ALMOXARIFADO:server 'C-c'

  ### Session Frotas
  echo "Stopping frotas...."
  tmux send-keys -t $SESSION_FROTAS:server 'C-c'

  ### Session Protocolo
  echo "Stopping protocolo..."
  tmux send-keys -t $SESSION_PROTOCOLO:server 'C-c'

  ### Session Patrimonio
  echo "Stopping patrimonios's sidekiq...."
  tmux send-keys -t $SESSION_PATRIMONIO:sidekiq 'C-c'

  echo "Stopping patrimonio..."
  tmux send-keys -t $SESSION_PATRIMONIO:server 'C-c'

  ### Session Base
  echo "Stopping postgres...."
  tmux send-keys -t $SESSION_BASE:1 'C-c'

  echo "Stopping redis-server...."
  tmux send-keys -t $SESSION_BASE:1 'C-c'

  sleep 3

  echo "All processes stopped."
}

function integra_restart() {
  integra_stop
  integra_start
}

function integra_destroy() {
  integra_stop
  tmux kill-session -t $SESSION_ALMOXARIFADO > /dev/null 2>&1
  tmux kill-session -t $SESSION_FROTAS > /dev/null 2>&1
  tmux kill-session -t $SESSION_PROTOCOLO > /dev/null 2>&1
  tmux kill-session -t $SESSION_PATRIMONIO > /dev/null 2>&1
  tmux kill-session -t $SESSION_BASE > /dev/null 2>&1

  echo "tmux sessions destroyed"
}

function integra_help() {
  echo "Command example:"
  echo "  $ integra_manager [start|stop|restart|open]"
}

function is_running() {
  $(ps -e | grep tmux | grep -v -q grep)

  if [ "$?" -eq 0 ]; then
    $(tmux list-sessions | grep -E "$SESSION_BASE|$SESSION_ALMOXARIFADO|$SESSION_FROTAS|$SESSION_PROTOCOLO|$SESSION_PATRIMONIO" | grep -v -q grep)

    if [ "$?" -eq 0 ]; then
      return 0
    fi
  fi

  return 1
}

function command_start() {
  is_running

  if [ "$?" -eq 0 ]; then
    echo "Already started. Connect to session with:"
    echo "\$ tmux a -t $SESSION_BASE"
    echo "\$ $PROGRAM_NAME open"
  else
    initialize
    create_sessions
    create_windows
    integra_start
  fi
}

function command_stop() {
  is_running

  if [ "$?" -eq 0 ]; then
    integra_destroy
  else
    echo "Server is not running."
  fi
}

function command_connect() {
  is_running

  if [ "$?" -eq 0  ]; then
    tmux a -t $SESSION_NAME
  else
    echo "Server is not running."
  fi
}

if [ $1 == "start" ]; then
  command_start
else
  if [ $1 == "stop" ]; then
    command_stop
  else
    if [ $1 == "restart" ]; then
      integra_restart
    else
      if [ $1 == "open" ]; then
        command_connect
      else
        echo "command not found\n"
        integra_help
      fi
    fi
  fi
fi
