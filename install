#!/usr/bin/env bash
set -e

here="$(cd "${0%/*}"; pwd)"

echo "===> Linking dotfiles:"
for file in bash_profile bashrc gitconfig gitignore_global gitmessage vimrc tmux.conf agignore; do
  ln -sfv "$here/$file" "${HOME}/.$file"
done

echo

echo "===> Linking binaries:"
if [ ! -d "${HOME}/.bin" ]; then
  mkdir "${HOME}/.bin"
fi

for file in `ls "$here/bin"`; do
  ln -sfv "$here/bin/$file" "${HOME}/.bin/$file"
done

if git --version &>/dev/null; then
  echo
  echo "===> Setting up Vim:"
  if vim --version &>/dev/null; then
    vim_dir="${HOME}/.vim"
    plug_dir="$vim_dir/autoload/plug.vim"

    mkdir -p "$vim_dir/.backup" && echo "Vim backup directory created"
    mkdir -p "$vim_dir/.tmp" && echo "Vim tmp directory created"

    if [ ! -d "$plug_dir" ]; then
      echo "Getting Plug"
      curl -fLo "$plug_dir" --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    else
      echo "Plug detected, just installing plugins..."
    fi

    vim +PlugInstall +qall && echo "Vim plugins installed"
    echo

    if nvim --version &>/dev/null; then
      echo "===> Setting up Neovim:"
      if [ ! -d "${XDG_CONFIG_HOME:=$HOME/.config}" ]; then
        mkdir -p $XDG_CONFIG_HOME
      fi

      ln -sfv ~/.vim $XDG_CONFIG_HOME/nvim
      ln -sfv ~/.vimrc $XDG_CONFIG_HOME/nvim/init.vim
    fi
  else
    echo "Vim not installed. Please install it and run this script again."
  fi

  echo
  echo "===> Setting up tmux:"
  if tmux -V &>/dev/null; then
    tmux_dir="${HOME}/.tmux"
    tpm_dir="$tmux_dir/plugins/tpm"

    mkdir -p "$tmux_dir/plugins" && echo "tmux plugins directory created"

    if [ ! -d "$tpm_dir" ]; then
      echo "Getting TPM (Tmux Plugin Manager)"
      git clone "https://github.com/tmux-plugins/tpm" "$tpm_dir"
    else
      echo "TPM detected, just installing plugins..."
    fi

    tmux start-server
    tmux new-session -d
    $tmux_dir/plugins/tpm/bin/install_plugins && echo "tmux plugins installed"
  else
    echo "Tmux not installed. Please install it and run this script again."
  fi
else
  echo "Git not installed. Please install it and run this script again."
fi
